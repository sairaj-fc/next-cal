// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  username   String?  @unique
  name       String?
  email      String   @unique
  password   String
  timezone   String   @default("Asia/Kolkata")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // ******* RELATIONS ********* //
  event    Event[]
  schedule Schedule[]
  booking  Booking[]
}

model Event {
  id          String   @id @default(cuid())
  title       String
  slug        String
  length      Int
  time_zone   String?
  description String?
  locations   Json?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  price       Int      @default(0)
  currency    String   @default("inr")

  // ******* RELATIONS ********* //
  user_id     String
  user        User      @relation(fields: [user_id], references: [id])
  schedule_id String
  schedule    Schedule  @relation(fields: [schedule_id], references: [id])
  booking     Booking[]

  // ******* CONSTRAINTS ********* //
  @@unique([user_id, slug])
}

model Schedule {
  id         String   @id @default(cuid())
  name       String
  time_zone  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // ******* RELATIONS ********* //
  user_id      String
  user         User           @relation(fields: [user_id], references: [id])
  event        Event[]
  availability Availability[]
}

model Availability {
  id         String   @id @default(cuid())
  days       Int[]
  start_time DateTime @db.Time
  end_time   DateTime @db.Time
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // ******* RELATIONS ********* //
  schedule_id String
  schedule    Schedule @relation(fields: [schedule_id], references: [id], onDelete: Cascade)
}

model Booking {
  id          String   @id @default(cuid())
  uid         String   @unique
  title       String
  description String?
  start_time  DateTime
  end_time    DateTime
  location    String?
  created_at  DateTime @default(now())
  updated_at  DateTime
  paid        Boolean  @default(false)

  // ******* RELATIONS ********* //
  event_id String?
  event    Event?  @relation(fields: [event_id], references: [id])
  user_id  String?
  user     User?   @relation(fields: [user_id], references: [id])
}
